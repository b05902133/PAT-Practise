1040. Longest Symmetric String (25)

时间限制 400 ms

内存限制 65536 kB

代码长度限制 16000 B

判题程序 Standard 

作者 CHEN, Yue
------------------------------------------------------------------------------------------


Given a string, you are supposed to output the length of the longest symmetric sub-string. 
For example, given "Is PAT&TAP symmetric?", the longest symmetric sub-string is "s PAT&TAP s", 
hence you must output 11.
------------------------------------------------------------------------------------------


 Input Specification: 

Each input file contains one test case which gives a non-empty string of length no more than 1000.
------------------------------------------------------------------------------------------


 Output Specification: 

For each test case, simply print the maximum length in a line.
------------------------------------------------------------------------------------------


Sample Input:

Is PAT&TAP symmetric?

Sample Output:

11
------------------------------------------------------------------------------------------

题意：

求字符串str中最长的回文长度

思路：

本题参考了 (柳婼 の blog) https://www.liuchuo.net/archives/2104

用二维数组：dp[i][j]表示str[i]到str[j]之间是否为回文，为1则是，为0则不是，有：
	
	若　j - i >= 2：
	
		若str[i] == str[j]，则dp[i][j] = dp[i + 1][j - 1]
				
		若str[i] != str[j]，则dp[i][j] = 0
		
	若　i == j，dp[i][j] = 1
	
	若　j == i + 1，dp[i][j] = str[i] == str[j] ? 1 : 0
	
初始化dp[i][i] = 1，dp[i][i + 1] = str[i] == str[i + 1]? 1 : 0，(0 <= i < i + 1 < str.length())，
此时dp[i][j]对于 i == j || j == i + 1的i、j均已确定

l从3开始直到l <= str.length()，根据递推求dp[i][i + l - 1]		

在判断dp的同时记录当前最大的回文长度，最后输出

